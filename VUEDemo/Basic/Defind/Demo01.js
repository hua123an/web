/*每个vue.js应用都是用vue函数创建一个新的vue实例开始的。下面是一个简单的vue实例
* */
let vm = new Vue ({
    el : '#app',                //选中的dom对象，
    data : {
        //定义数据类型
    },
    method : {
    //     定义方法

    },
    computed : {
        //定义计算属性
    },
    filter : {
        //定义过滤器
    }
})
/*其中：
* 1，el:决定之后vue实例会去操作哪个dom
* 2.data：vue实例对应的数据对象
*3.methods：定义属性vue的一些方法，可以在其他地方调用，也可以在指令中执行
*4.computed：定义计算属性
*5.filter：定义过滤器
* 每个vue实例都是独立的，都有属于自己的生命周期。vue的生命周期分为五个状态。
* 1.创建状态：vue实例创建的过程
*2.数据初始化过程：创建vue实例的数据初始化
* 3.挂载状态：挂在到真实的dom节点。
* 4.更新状态：如果data中的数据改变，会触发对应组件进行重新渲染
*5.销毁状态：销毁实例
*以上五个状态就是一个组件实例完整的生命周期：
* VUEDemo.js框架的主要优点：
*1.使用框架可以提高开发效率
*2.提高渲染效率，对数据进行双向绑定
* 3.在vue中，一个核心概念就是让用户不再操作dom元素，让程序员有更多时间处理逻辑
*
*
*
* */
